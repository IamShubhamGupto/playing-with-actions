name: CI
on:
  push:
    branches:
      - main
env:
  MONTH: null
  YEAR: null
  SEM: null
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build:
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3.3.0
      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Create a GitHub release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.tag_version.outputs.new_tag }}
          name: Release ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog }}
  create_sprint_branch:
    needs: build
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3.3.0
    - name: Get current sprint number
      id: get_sprint_number
      run: |
        CURRENT_BRANCH=$(git symbolic-ref --short HEAD)
        SPRINT_NUMBER=$(echo ${CURRENT_BRANCH} | grep -o "[0-9]*$")
        CURRENT_MONTH=$(date +%m)
        echo "sprint_number=$(( SPRINT_NUMBER + 1 ))" >> $GITHUB_OUTPUT

    - name: Create new sprint branch name
      id: get_branch_name
      run: |
        CURRENT_MONTH=$(date +%m)
        NEW_BRANCH_PREFIX="sprint/"
        if [[ ${CURRENT_MONTH} -ge 1 ]] && [[ ${CURRENT_MONTH} -le 8 ]]; then
            NEW_BRANCH_PREFIX="${NEW_BRANCH_PREFIX}s"
        else
            NEW_BRANCH_PREFIX="${NEW_BRANCH_PREFIX}f"
        fi
        NEW_BRANCH_YEAR=$(date +%y)
        NEW_BRANCH_SPRINT_NUMBER=${{ steps.get_sprint_number.outputs.sprint_number }}
        NEW_BRANCH="${NEW_BRANCH_PREFIX}${NEW_BRANCH_YEAR}/${NEW_BRANCH_SPRINT_NUMBER}"
        echo "new_branch=$(( NEW_BRANCH ))" >> $GITHUB_OUTPUT
    
    - name: make new branch
      id: make_new_branch
      uses: peterjgrainger/action-create-branch@v2.3.0
      env:
        github_token: ${{ secrets.GITHUB_TOKEN }}
      with:
        branch: "refs/heads/${{ steps.get_branch_name.outputs.new_branch }}"
        sha: '${{ github.event.pull_request.head.sha }}'


  # new_branch:
  #   permissions: write-all
  #   runs-on: ubuntu-latest
  #   needs: build
  #   steps:
  #     - name: Set current year as env variable
  #       run: echo "YEAR=$(date +'%y')" >> $GITHUB_ENV
  #     - name: Set current month as env variable
  #       run: echo "MONTH=$(date +'%m')" >> $GITHUB_ENV

  #     - name: check for spring semester
  #       if: "${{ env.MONTH >= 1 && env.MONTH <= 8 }}"
  #       run: echo "SEM=s" >> $GITHUB_ENV
  #     - name: check for fall semester
  #       if: "${{ env.MONTH >= 9 && env.MONTH <= 12 }}"
  #       run: echo "SEM=f" >> $GITHUB_ENV
  #     - name: Set sprint number
  #       run: echo "SPRINT"=${{ secrets.SPRINT }} + 1 >> $GITHUB_ENV
  #     - name: Update secret value
  #       run: |
  #         NEW_VALUE=$((SPRINT + 1))
  #         curl -X PATCH -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" -H "Content-Type: application/json" --data "{\"name\":\"SPRINT\",\"value\":\"$NEW_VALUE\"}" https://api.github.com/repos/${{ github.repository }}/actions/secrets/SPRINT
  #     - name: Reset sprint count at the beginning of the semester
  #       if: "${{ (env.MONTH == 1 || env.MONTH == 9) && (secrets.SPRINT != false) }}"
  #       run: echo "SPRINT"=0 >> $GITHUB_STATE 
  #     # - name: Reset reset flag once month is over
  #     #   if: "${{ env.MONTH != 1 && env.MONTH != 9 }}"
  #     #   run: echo "RESET"=false >> $GITHUB_STATE

  #     - name: make new branch
  #       uses: peterjgrainger/action-create-branch@v2.3.0
  #       env:
  #         github_token: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         branch: "refs/heads/sprint/${{ env.SEM }}${{ env.YEAR }}/${{ env.SPRINT }}"
  #         sha: '${{ github.event.pull_request.head.sha }}'

  # old code
          # if [[ ${CURRENT_MONTH} -eq 1 ]] || [[ ${CURRENT_MONTH} -eq 9 ]]; then
        #     echo "::set-output name=sprint_number::0"
        # else
        #     if [[ "${GITHUB_REF}" == "refs/heads/main" ]]; then
        #         echo "::set-output name=sprint_number::$((SPRINT_NUMBER + 1))"
        #     else
        #         echo "::set-output name=sprint_number::$((SPRINT_NUMBER))"
        #     fi
        # fi


        # more old code

        # echo current = ${CURRENT_BRANCH}
        # echo new = ${NEW_BRANCH}
        # git fetch origin
        # git merge origin ${CURRENT_BRANCH}
        # git checkout -b ${NEW_BRANCH}
        # git push -u origin ${NEW_BRANCH}
        
